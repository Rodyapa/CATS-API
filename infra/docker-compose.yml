volumes:
  pg_data:
  static:
services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5 
  backend:
    depends_on:
      db:
        condition: service_healthy 
    build:
      context: ../backend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - static:/backend_static
  gateway:
    depends_on:
      - backend
    build:
      context: ../gateway
      dockerfile: Dockerfile
    volumes:
      - static:/staticfiles/
    ports:
      - 8070:80
    
  test:
    build:
      context: ../backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    command: sh -c "cd cats_api && pytest --maxfail=1 tests/"
    volumes:
      - static:/backend_static
    environment:
      - DJANGO_SETTINGS_MODULE=cats_api.settings
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    entrypoint: [""]